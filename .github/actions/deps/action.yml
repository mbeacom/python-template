name: Dependency Setup
description: 'Action to setup the runtime environment for CI jobs.'

inputs:
  python-version:
    description: 'The Python version to be used during setup'
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup Python
      uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c  # v5.0.0
      with:
        python-version: '${{ inputs.python-version }}'

    - name: Cache Poetry
      id: cache-poetry
      uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319  # v4.0.1
      with:
        path: ${{github.workspace}}/.poetry
        key: poetry-self-${{ hashFiles('.github/workflows/*.yml') }}
        restore-keys: poetry-self-

    - name: Install Poetry
      if: steps.cache-poetry.outputs.cache-hit != 'true'
      shell: bash
      run: |
        export POETRY_HOME=${{github.workspace}}/.poetry
        curl -sSL https://install.python-poetry.org | python3 - --preview

    - name: Add Poetry to $PATH
      shell: bash
      run: echo "${{github.workspace}}/.poetry/bin" >> $GITHUB_PATH

    - name: Poetry Version
      shell: bash
      run: poetry --version

    - name: Check pyproject.toml validity
      shell: bash
      run: poetry check --no-interaction

    - name: Cache Dependencies
      id: cache-deps
      uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319  # v4.0.1
      with:
        path: ${{github.workspace}}/.venv
        key: poetry-deps-${{ hashFiles('**/poetry.lock') }}
        restore-keys: poetry-deps-

    - name: Install Deps
      if: steps.cache-deps.cache-hit != 'true'
      shell: bash
      run: |
        poetry env use ${{ inputs.python-version }}
        poetry config virtualenvs.in-project true
        poetry install --no-interaction
